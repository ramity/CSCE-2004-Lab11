#include <iostream>
using namespace std;

// Interface for Temperature class
class Temperature
{
public:
   Temperature();
   Temperature(const Temperature & Temp);
   ~Temperature();

   double getCelsius() const;
   double getFahrenheit() const;
   void setCelsius(double Temp);
   void setFahrenheit(double Temp);
   void print();

private:
   static const double ABSOLUTE_ZERO = -273.15;
   double celsiusTemperature;
};

// Implementation of Temperature class
Temperature::Temperature()
{
   celsiusTemperature = 0;
}

Temperature::Temperature(const Temperature & temp)
{
   celsiusTemperature = temp.celsiusTemperature;
}

Temperature::~Temperature()
{
}

double Temperature::getCelsius() const
{
   return celsiusTemperature;
}

double Temperature::getFahrenheit() const
{
   return 9.0 * celsiusTemperature / 5.0 + 32.0;
}

void Temperature::setCelsius(double temp)
{
   celsiusTemperature = temp;
   if (celsiusTemperature < ABSOLUTE_ZERO)
      celsiusTemperature = ABSOLUTE_ZERO;
}

void Temperature::setFahrenheit(double temp)
{
   celsiusTemperature = (temp - 32.0) * 5.0 / 9.0 ;
   if (celsiusTemperature < ABSOLUTE_ZERO)
      celsiusTemperature = ABSOLUTE_ZERO;
}

void Temperature::print()
{
   cout.precision(3);
   for (double F = start; F <= end; F++)
   {
      Temperature temp;
      temp.setFahrenheit(F);
      cout << F << "F = " << temp.getCelsius() << "C\n";
   }
}

// Program to test Temperature class
int main()
{
   double start, end;
   cout << "Enter start temperature: ";
   cin >> start;
   cout << "Enter end temperature: ";

   return 0;
}
